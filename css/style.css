* { box-sizing: border-box; }

section, footer, nav {
  display: block;
}

body {
  font-family: 'Helvetica Neue', Arial, sans-serif;
  color: #333;
  max-width: 720px;
  margin: 0 auto;
  padding: 10px;
}

a {
  color: hsl( 220, 90%, 40% );
  text-decoration: none;
}

a:hover {
  background-color: hsl( 220, 90%, 50% );
  color: white;
}

button {
  font-size: 16px;
}

footer {
  border-top: 1px solid #CCC;
  font-size: 0.8em;
  position: relative;
  z-index: 100;
}

#disclaimer {
  color: red;
  font-weight: bold;
  display: none;
}
.no-csstransforms3d #disclaimer { display: block; }

hr {
  border: none;
  border-top: 1px solid #CCC;
  margin: 40px 0;
}

figure {
  margin: 0;
}

/* code */

code, pre {
  font-family: 'Consolas', 'Monaco', 'Menlo', monospace;
  font-size: 15px;
  background: #F2F2F2;
}

code { padding: 2px 4px; }

pre {
  padding: 10px;
  white-space: pre-wrap;
}

pre code { padding: 0; }

/* index navigation */

.index nav ul {
  list-style: none;
  margin: 0 0 3.0em 0;
  padding: 0;
}

.index nav ul a {
  display: block;
  font-size: 18px;
  font-weight: bold;
  line-height: 24px;
  padding: 10px;
  border: 1px solid #CCC;
  border-bottom: none;
}

.index nav ul li:first-child a {
  border-radius: 10px 10px 0 0;
}

.index nav ul li:last-child a {
  border-radius: 0 0 10px 10px;
  border-bottom: 1px solid #CCC;
}

/**** Docs ****/

body.doc { max-width: 920px; }

.doc #content {
  line-height: 1.5em;
}

.doc #content blockquote {
  margin-left: 0;
  padding: 10px;
  background: #EEE;
}

.doc #content img {
  border: 10px solid #EEE;
}

.doc nav h1 {
  font-size: 20px;
}

.doc nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.doc nav li a {
  display: block;
  padding: 0.3em 0;
}

.doc nav li.current a {
  font-weight: bold;
  color: #333;
}
.doc nav li.current a:hover { color: white; }



@media screen and (min-width: 768px) {

  body.doc #content {
    padding-left: 220px;
  }

  .doc #doc-nav-wrapper {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
  }

  .doc .doc-nav-positioner {
    max-width: 920px;
    margin: 0 auto;
    position: relative;
  }

  .doc nav {
    width: 200px;
    font-size: 14px;
    position: absolute;
    top: 10px;
    left: 10px;
  }

  .doc nav h1 {
    margin-top: 0;
  }

}


/******* Pygments *******/

code .s1,
code .s { color: #0A2; } /* string */
code .mi, /* integer */
code .cp { color: #07D; } /* doctype */
code .k { color: #E31; } /* keyword */
code .kd, /* storage */
code .na { color: #D31; } /* markup attribute */
code .p  { color: #456; } /* punctuation */
code .o  { color: #A62; }   /* operator */
code .nb { color: #3A3; } /* support, CSS color value */

/* comment */
code .c,
code .c1 { color: #999; font-style: italic; }

code .nt { color: #37B; } /* Markup open tag */

code .nf { color: #567; } /* css id */
code .nc { color: #486; }  /* CSS class */
code .m  { color: #35B; } /* CSS value */
code .nd { color: #38D; } /* CSS pseudo selector */

/* demos
------------------------- */

.example {
  border: 1px solid #CCC;
  margin: 40px 0;
  position: relative;
}

/* ---- options ---- */

.options {
  position: relative;
  z-index: 2; /* above demo content */
  margin: 40px 0;
}

.options__row {
  margin: 10px 0;
}

/* ---- set-persp ---- */

.example--set-persp {
  width: 200px;
  height: 200px;
}

.set-persp-panel {
  width: 100%;
  height: 100%;
}

.set-persp-panel--red {
  background: red;
  transform: perspective(600px) rotateY(45deg);
}

.example--set-persp--blue {
  perspective: 600px;
}

.set-persp-panel--blue {
  background: blue;
  transform: rotateY(45deg);
}

/* ---- persp-children---- */

.example--persp-children {
  width: 200px;
  height: 200px;
}

.persp-children-panel {
  width: 55px;
  height: 55px;
  float: left;
  margin: 5px;
}

.persp-children-panel--separate {
  background: red;
  transform: perspective(400px) rotateY(45deg);
}

.example--persp-children--together {
  perspective: 400px;
}

.persp-children-panel--together {
  background: blue;
  transform: rotateY(45deg);
}

/* ---- persp-cube---- */

.example--persp-cube {
  width: 200px;
  height: 200px;
  position: relative;
  margin: 80px 0;
  perspective: 400px;
}

.cube {
  width: 200px;
  height: 200px;
  position: absolute;
  transform-style: preserve-3d;
  transform: translateZ(-100px);
}

.cube.is-spinning {
  animation: spinCube 8s infinite ease-in-out;
}

@keyframes spinCube {
    0% { transform: translateZ(-100px) rotateX(  0deg) rotateY(  0deg); }
  100% { transform: translateZ(-100px) rotateX(360deg) rotateY(360deg); }
}

.cube__face {
  position: absolute;
  width: 200px;
  height: 200px;
  border: 2px solid black;
  line-height: 200px;
  font-size: 120px;
  font-weight: bold;
  color: white;
  text-align: center;
  backface-visibility: hidden;
}

.cube.is-backface-visible .cube__face {
  backface-visibility: visible;
}

.cube__face--front  { background: hsla(  0, 100%, 50%, 0.7); }
.cube__face--back   { background: hsla( 60, 100%, 50%, 0.7); }
.cube__face--right  { background: hsla(120, 100%, 50%, 0.7); }
.cube__face--left   { background: hsla(180, 100%, 50%, 0.7); }
.cube__face--top    { background: hsla(240, 100%, 50%, 0.7); }
.cube__face--bottom { background: hsla(300, 100%, 50%, 0.7); }

.cube__face--front  { transform: translateZ(100px); }
.cube__face--back   { transform: rotateX(-180deg) translateZ(100px); }
.cube__face--right  { transform: rotateY(  90deg) translateZ(100px); }
.cube__face--left   { transform: rotateY( -90deg) translateZ(100px); }
.cube__face--top    { transform: rotateX(  90deg) translateZ(100px); }
.cube__face--bottom { transform: rotateX( -90deg) translateZ(100px); }

/* ---- example--transform-func ---- */

.example--transform-func {
  display: inline-block;
  width: 200px;
  height: 200px;
  margin: 60px 60px 60px 0;
  perspective: 600px;
}

.transform-func-panel {
  width: 200px;
  height: 200px;
  background: hsla(0, 100%, 50%, 0.7);
  line-height: 200px;
  color: white;
  font-size: 18px;
  text-align: center;
}


/* ---- pixelation ---- */

.pixelation-p {
  text-align: center;
  margin: 40px 0;
}

/* ---- card-flip ---- */

.example--card-flip {
  width: 200px;
  height: 260px;
  perspective: 600px;
}

.card {
  width: 100%;
  height: 100%;
  transition: transform 1s;
  transform-style: preserve-3d;
  cursor: pointer;
}

.card.is-flipped {
  transform: rotateY(180deg);
}

.card--slide {
  transform-origin: center right;
}

.card--slide.is-flipped {
  transform: translateX( -100% ) rotateY( -180deg )
}

.card__face {
  position: absolute;
  height: 100%;
  width: 100%;
  line-height: 260px;
  color: white;
  text-align: center;
  font-weight: bold;
  font-size: 140px;
  backface-visibility: hidden;
}

.card__face--front {
  background: red;
}

.card__face--back {
  background: blue;
  transform: rotateY( 180deg );
}
